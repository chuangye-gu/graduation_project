C51 COMPILER V9.54   TEST                                                                  05/15/2020 16:02:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: D:\KEIL\Keil C51\C51\BIN\C51.EXE test.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg52.h>
   2          #include<math.h>
   3          float R;
   4          float Kp;
   5          float T;
   6          float Ti;
   7          float Td;
   8          float e2;
   9          float e1,e;
  10          float a0,a1,a2;
  11          #define ui unsigned int
  12          #define uc unsigned char
  13          sbit bj=P2^4;              //低电平报警模块工作
  14          sbit lcden=P2^7;             //LCD E
  15          sbit lcdrs=P2^6;             //LCD  RS
  16          sbit lcdrw=P2^5; //            //LCD RW
  17          sbit control=P2^3;             //加热模块相关。低电平启动
  18          char lshi,lge,hshi,hge;
  19          uc num,flag;
  20          ui temp;
  21          sbit dsio=P3^7;             //DS18B20输入口
  22          //延时
  23          void delay(ui z)
  24          {
  25   1        uc x,y;
  26   1        for(x=z;x>0;x--)
  27   1          for(y=110;y>0;y--);
  28   1      }
  29          //DS18B20控制
  30          void dsinit()
  31          {
  32   1        uc i;
  33   1        dsio=0;
  34   1        i=70;
  35   1        while(i--);
  36   1        dsio=1;
  37   1        i=4;
  38   1        while(i--);
  39   1      }
  40          void dswritebyte(uc dat)
  41          {
  42   1        uc i,j;
  43   1        for(j=0;j<8;j++)
  44   1        {
  45   2          dsio=0;
  46   2          i++;
  47   2          dsio=dat&0x01;
  48   2          i=6;
  49   2          while(i--);
  50   2          dsio=1;
  51   2          dat>>=1;
  52   2        }
  53   1      }
  54          uc dsreadbyte()
  55          {
C51 COMPILER V9.54   TEST                                                                  05/15/2020 16:02:26 PAGE 2   

  56   1        uc i,j,byte,b;
  57   1        for(j=0;j<8;j++)
  58   1        {
  59   2          dsio=0;
  60   2          i++;
  61   2          dsio=1;
  62   2          i++;i++;
  63   2          b=dsio;
  64   2          byte=(byte>>1)|(b<<7);
  65   2          i=4;
  66   2          while(i--);
  67   2        }
  68   1        return byte;
  69   1      }
  70          void dschangetemp()
  71          {
  72   1        dsinit();
  73   1        delay(1);
  74   1        dswritebyte(0xcc);
  75   1        dswritebyte(0x44);
  76   1      
  77   1      }
  78          void dsreadtemp()
  79          {
  80   1        dsinit();
  81   1        delay(1);
  82   1        dswritebyte(0xcc);
  83   1        dswritebyte(0xbe);
  84   1      }
  85          ui gettemp()
  86          {
  87   1        int temp;
  88   1        uc h,l;
  89   1        dschangetemp();
  90   1        dsreadtemp();
  91   1        l=dsreadbyte();
  92   1        h=dsreadbyte();
  93   1        temp=h;
  94   1        temp<<=8;
  95   1        temp|=l;
  96   1        temp=temp*0.0625*100+0.5;
  97   1        return temp;
  98   1      }
  99          //LCD控制程序
 100          void lcdwritecom(uc com)
 101          {
 102   1        lcdrs=0;
 103   1        P0=com;
 104   1        delay(10);
 105   1        lcden=1;
 106   1        delay(10);
 107   1        lcden=0;
 108   1      }
 109          void lcdwritedata(uc date)
 110          {
 111   1        lcdrs=1;
 112   1        P0=date;
 113   1        delay(10);
 114   1        lcden=1;
 115   1        delay(10);
 116   1        lcden=0;
 117   1      }
C51 COMPILER V9.54   TEST                                                                  05/15/2020 16:02:26 PAGE 3   

 118          void lcdinit()
 119          {
 120   1        lcdrw=0;
 121   1        lcden=0;
 122   1        lcdwritecom(0x38);
 123   1        lcdwritecom(0x0c);
 124   1        lcdwritecom(0x06);
 125   1        lcdwritecom(0x01);
 126   1      }
 127          //LCD显示
 128          void lcddisplay(int temp)
 129          {
 130   1        ui  tab[]={0,0,0,-2,0,0};
 131   1        lcdwritecom(0x80);
 132   1        lcdwritedata('+');
 133   1        tab[0]=temp/10000;
 134   1        tab[1]=temp%10000/1000;
 135   1        tab[2]=temp%1000/100;
 136   1        tab[4]=temp%100/10;
 137   1        tab[5]=temp%10;
 138   1        lcdwritecom(0x81);
 139   1        for(num=0;num<6;num++)
 140   1        {
 141   2          lcdwritedata('0'+tab[num]);
 142   2        }
 143   1      }
 144          
 145          void adjust()
 146          {
 147   1        delay(100);
 148   1        flag++;
 149   1        if(flag==5)flag=1;
 150   1        if(flag==1)
 151   1        {
 152   2          lcdwritecom(0x80+0x44);
 153   2          lcdwritecom(0x0f);  
 154   2         }
 155   1         if(flag==2)
 156   1        {
 157   2          lcdwritecom(0x80+0x45);
 158   2          lcdwritecom(0x0f);  
 159   2         }
 160   1        if(flag==3)
 161   1        {
 162   2          lcdwritecom(0x80+0x47);
 163   2          lcdwritecom(0x0f);  
 164   2         }
 165   1        if(flag==4)
 166   1        {
 167   2          lcdwritecom(0x80+0x48);
 168   2          lcdwritecom(0x0f);  
 169   2         }
 170   1      }
 171          void inc()
 172          {
 173   1        delay(100);
 174   1        switch(flag)
 175   1        {
 176   2          case 1:lshi++; if(lshi==10)lshi=0;
 177   2                  lcdwritedata('0'+lshi);
 178   2                  lcdwritecom(0x10);
 179   2                  break;
C51 COMPILER V9.54   TEST                                                                  05/15/2020 16:02:26 PAGE 4   

 180   2          case 2:lge++; if(lge==10)lge=0;
 181   2                  lcdwritedata('0'+lge);
 182   2                  lcdwritecom(0x10);
 183   2                  break;
 184   2          case 3:hshi++; if(hshi==10)hshi=0;
 185   2                  lcdwritedata('0'+hshi);
 186   2                  lcdwritecom(0x10);
 187   2                  break;
 188   2          case 4:hge++; if(hge==10)hge=0;
 189   2                  lcdwritedata('0'+hge);
 190   2                  lcdwritecom(0x10);
 191   2                  break;
 192   2        }
 193   1      }
 194          void dec()
 195          {
 196   1        delay(100);
 197   1        switch(flag)
 198   1        {
 199   2          case 1:lshi--; if(lshi<0)lshi=9;
 200   2                  lcdwritedata('0'+lshi);
 201   2                  lcdwritecom(0x10);
 202   2                  break;
 203   2          case 2:lge--; if(lge<0)lge=9;
 204   2                  lcdwritedata('0'+lge);
 205   2                  lcdwritecom(0x10);
 206   2                  break;
 207   2          case 3:hshi--; if(hshi<0)hshi=9;
 208   2                  lcdwritedata('0'+hshi);
 209   2                   lcdwritecom(0x10);
 210   2                  break;
 211   2          case 4:hge--; if(hge<0)hge=9;
 212   2                  lcdwritedata('0'+hge);
 213   2                   lcdwritecom(0x10);
 214   2                  break;
 215   2        }
 216   1      }
 217          //键盘扫描
 218          void keyscan()
 219          {
 220   1        uc test,num;
 221   1        num=0;
 222   1        test=P1;
 223   1        if(test!=0xff)
 224   1        delay(5);
 225   1        test=P1;
 226   1        if(test==0xf7)
 227   1        
 228   1        {
 229   2          while(P1!=0xff);
 230   2          num++;
 231   2          while(1)
 232   2          {
 233   3            test=P1;
 234   3            if(test!=0xff)
 235   3            delay(5);
 236   3            test=P1;
 237   3            if(test!=0xff)
 238   3            {
 239   4              if(test==0xf7)
 240   4                num++;
 241   4                if(num==2)
C51 COMPILER V9.54   TEST                                                                  05/15/2020 16:02:26 PAGE 5   

 242   4                { lcdwritecom(0x0c);
 243   5                  break;}
 244   4              switch(test)
 245   4              {
 246   5                case 0xfe:adjust(); 
 247   5                    break;
 248   5                case 0xfd:inc();
 249   5                    break;
 250   5                case 0xfb:dec();
 251   5                    break;
 252   5              }
 253   4            }
 254   3            while(P1!=0xff);
 255   3          
 256   3          }
 257   2          }
 258   1      }
 259          //PID
 260          void PIDinit()
 261          {
 262   1            
 263   1           Kp=2;Ti=4;Td=1;T=1;R=25;
 264   1           a0=Kp*(1+T/Ti+Td/T);
 265   1           a1=-Kp*(1+(2*Td)/T);
 266   1           a2=Kp*(Td/T);
 267   1           e2=e1=0;
 268   1      }
 269          void PIDdeal()
 270          {
 271   1        float y ,u ;
 272   1        y=gettemp();
 273   1        e=y/100-R;
 274   1        u=a0*e+a1*e1+a2*e2;
 275   1        e2=e1;e1=e;
 276   1        if(u>0.5||u<-0.5)
 277   1        control=0;
 278   1        else control=1;
 279   1      }
 280          void main()
 281          {
 282   1        uc code tab2[]="SET:20~80C";
 283   1        uc i;
 284   1        TMOD=0x01;  //定时器方式一
 285   1        TH0=(65535-10000)/256;   //定时10ms
 286   1        TL0=(65535-10000)%256;
 287   1        ET0=1;
 288   1        TR0=1;
 289   1        lcdinit();
 290   1        lcdwritecom(0x87);
 291   1        lcdwritedata('C');
 292   1        lcdwritecom(0x80+0x40);
 293   1        for(i=0;i<10;i++)
 294   1          lcdwritedata(tab2[i]) ;
 295   1        lshi=2;lge=0;hshi=5;hge=0;
 296   1        while(1)
 297   1        { 
 298   2          lcddisplay(gettemp());
 299   2            keyscan() ;
 300   2          EA=1; while(1);
 301   2        }
 302   1      }
 303          void t0() interrupt 1
C51 COMPILER V9.54   TEST                                                                  05/15/2020 16:02:26 PAGE 6   

 304          { 
 305   1        uc i;
 306   1        TH0=(65535-10900)/256;
 307   1        TL0=(65535-10900)%256;
 308   1        i++; 
 309   1        if(i==100)
 310   1        {
 311   2           void PIDinit();
 312   2           void PIDdeal();
 313   2        }
 314   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1333    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     52      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
